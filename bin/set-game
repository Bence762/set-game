#!/usr/bin/env node
'use strict'

const { Card, Deck, Hand } = require('../lib/index')

require('yargs')
  .usage('$0 <cmd> [args]')
  .command({
    command: 'play',
    desc: 'Shuffle, deal, and play a hand',
    builder (yargs) {
      yargs.options({
        html: {
          alias: 'H',
          type: 'boolean',
          describe: 'HTML output'
        },
        text: {
          alias: 't',
          type: 'boolean',
          describe: 'Non-color text output',
          conflicts: 'html'
        }
      })
    },
    handler (argv) {
      const hand = new Hand()
      hand.play()
      if (argv.html) {
        console.log(hand.html())
      } else if (argv.text) {
        console.log(hand.text({colors: false}))
      } else {
        console.log(hand)
      }
    }
  })
  .command({
    command: 'icons',
    desc: 'Generate icon SVG files',
    handler (argv) {
      const fs = require('fs')
      const path = require('path')
      const deck = new Deck()
      deck.cards.forEach((card) => {
        const fn = path.join(
          __dirname, '..', 'icons', `${card.name()}.svg`)
        fs.writeFileSync(fn, card.template('svg'))
      })
    }
  })
  .command({
    command: 'solve',
    desc: 'Find the sets in a board',
    handler (argv) {
      const chalk = require('chalk')
      const readline = require('readline')
      const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout,
        terminal: false
      })

      const hand = new Hand()
      const cards = []
      rl.on('line', (line) => {
        try {
          const words = line.split(/\s+/g)
          for (const w of words) {
            cards.push(new Card(w))
          }
        } catch (e) {
          console.log('   ', chalk.bgRed(e.message))
        }
      })

      rl.on('close', () => {
        hand.add(cards)
        for (let set = hand.firstSet(); set; set = hand.firstSet()) {
          console.log(set)
          hand.remove(set)
        }
      })

    }
  })
  .strictCommands()
  .demandCommand(1, 1, 'Specify a command')
  .help()
  .alias('help', 'h')
  .argv
